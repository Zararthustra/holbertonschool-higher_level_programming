The ``7-base_geometry`` module
========================

Using ``BaseGeometry``
-----------------

Import:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Try/Expect:
	>>> bg = BaseGeometry()

	>>> type(bg)
	<class '7-base_geometry.BaseGeometry'>

	>>> bg.integer_validator("string", "blabla")
	Traceback (most recent call last):
	TypeError: string must be an integer

	>>> bg.integer_validator("negative value", -4)
	Traceback (most recent call last):
	ValueError: negative value must be greater than 0

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> integer_validator()
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined

	>>> integer_validator(age)
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, 1)
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, 0)
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, (4,))
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, [3])
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, True)
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, {3, 4})
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
	
	>>> integer_validator(age, None)
	Traceback (most recent call last):
	NameError: name 'integer_validator' is not defined
